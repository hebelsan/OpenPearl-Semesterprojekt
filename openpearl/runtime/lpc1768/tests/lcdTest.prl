MODULE(lcdTest);
SYSTEM;
__cpp__(
 'pearlrt::Lpc17xxClock dummy(1);'
 ' pearlrt::Hy32  s_lcd(1);'
 ' pearlrt::Device * d_lcd = &s_lcd;'
);

PROBLEM;
__cpp__(' pearlrt::Character<10> _text1("0123456789");');
__cpp__(' pearlrt::Character<5> _black("\\033[30m");');
__cpp__(' pearlrt::Character<5> _red("\\033[31m");');
__cpp__(' pearlrt::Character<5> _green("\\033[32m");');
__cpp__(' pearlrt::Character<5> _yellow("\\033[33m");');
__cpp__(' pearlrt::Character<5> _blue("\\033[34m");');
__cpp__(' pearlrt::Character<5> _magenta("\\033[35m");');
__cpp__(' pearlrt::Character<5> _cyan("\\033[36m");');
__cpp__(' pearlrt::Character<5> _white("\\033[37m");');
__cpp__(' pearlrt::Character<5> _bgblack("\\033[40m");');
__cpp__(' pearlrt::Character<5> _bgred("\\033[41m");');
__cpp__(' pearlrt::Character<5> _bggreen("\\033[42m");');
__cpp__(' pearlrt::Character<5> _bgyellow("\\033[43m");');
__cpp__(' pearlrt::Character<5> _bgblue("\\033[44m");');
__cpp__(' pearlrt::Character<5> _bgmagenta("\\033[45m");');
__cpp__(' pearlrt::Character<5> _bgcyan("\\033[46m");');
__cpp__(' pearlrt::Character<5> _bgwhite("\\033[47m");');
__cpp__(' pearlrt::Character<8> _goto("\\033[00;00H");');
__cpp__(' pearlrt::Character<4> _clearToEnd("\\033[0J");');
__cpp__(' pearlrt::Character<4> _clearToBegin("\\033[1J");');
__cpp__(' pearlrt::Character<4> _clear("\\033[2J");');
__cpp__(' pearlrt::Character<5> _small("\\033[10m");');
__cpp__(' pearlrt::Character<5> _big("\\033[11m");');

  SPC lcd DATION OUT SYSTEM ALPHIC;
  DCL termout DATION OUT ALPHIC DIM(*,80) FORWARD CREATED(lcd);

pgoto: PROC( (line,col) FIXED);
   DCL ch CHAR(1);
   DCL l FIXED INIT(3);
   DCL c FIXED INIT(6);
   __cpp__(
       ' int p;'
       ' p = _l.x;'
       ' _ch = pearlrt::toChar( (_line.x/10)+\'0\');'
       ' _goto.setCharAt(p,_ch);'
       ' _line.x %= 10;'
       '_ch = pearlrt::toChar(_line.x+\'0\'); '
       '_goto.setCharAt(p+1,_ch);'
       ' p = _c.x;'
       ' _ch = pearlrt::toChar( (_col.x/10)+\'0\');'
       '_goto.setCharAt(p,_ch);'
       ' _col.x %= 10;'
       '_ch = pearlrt::toChar(_col.x+\'0\'); '
       '_goto.setCharAt(p+1,_ch);'
   );
END;

fill: PROC;
  CALL pgoto(1,1);
  PUT bgyellow, blue TO termout BY A,A;
  FOR i FROM 1 TO 14 REPEAT
    FOR j FROM 0 TO 1 REPEAT
      CALL pgoto(i,1+10*j);
      PUT goto,text1 TO termout BY A,A;
    END;
  END;
END;

clearTests: PROC;
  CALL pgoto(1,1);
  PUT goto,bgblack,goto TO termout BY A,A,A;
  ! clear to end mid of line
  CALL fill;
  CALL pgoto(4,15);
  PUT goto,bgcyan,clearToEnd TO termout BY A,A,A;
  AFTER 1 SEC RESUME;
  PUT bgblue,yellow,text1 TO termout BY A,A,A;
  AFTER 1 SEC RESUME;

  ! clear to end start of line
  CALL fill;
  CALL pgoto(4,1);
  PUT goto,bgcyan,clearToEnd TO termout BY A,A,A;
  AFTER 1 SEC RESUME;
  PUT bgblue,yellow,text1 TO termout BY A,A,A;
  AFTER 1 SEC RESUME;

  ! clear to beginning mid of line
  CALL fill;
  CALL pgoto(4,15);
  PUT goto,bgcyan,clearToBegin TO termout BY A,A,A;
  AFTER 1 SEC RESUME;
  PUT bgblue,yellow,text1 TO termout BY A,A,A;
  AFTER 1 SEC RESUME;

  ! clear to beginning end start of line
  CALL fill;
  CALL pgoto(4,1);
  PUT goto,bgcyan,clearToBegin TO termout BY A,A,A;
  AFTER 1 SEC RESUME;
  PUT bgblue,yellow,text1 TO termout BY A,A,A;
  AFTER 1 SEC RESUME;

  ! clear all mid of line
  CALL fill;
  CALL pgoto(4,15);
  PUT goto,bgcyan,clear TO termout BY A,A,A;
  AFTER 1 SEC RESUME;
  PUT bgblue,yellow,text1 TO termout BY A,A,A;
  AFTER 1 SEC RESUME;
END;

textColors: PROC;
  CALL pgoto(1,1);
  PUT goto,bgblack,goto TO termout BY A,A,A;
  PUT  text1 TO termout BY A, SKIP;
  PUT  red,text1 TO termout BY A,A, SKIP;
  PUT  green,text1 TO termout BY A,A, SKIP;
  PUT  yellow,text1 TO termout BY A,A, SKIP;
  PUT  blue,text1 TO termout BY A,A, SKIP;
  PUT  magenta,text1 TO termout BY A,A, SKIP;
  PUT  cyan,text1 TO termout BY A,A, SKIP;
  PUT  white,text1 TO termout BY A,A, SKIP;
  AFTER 1 SEC RESUME;
  CALL pgoto(1,1);
  PUT goto,bgblack,goto TO termout BY A,A,A;
  PUT bgred,white,text1 TO termout BY A,A,A ,SKIP;
  PUT bgred,white,text1 TO termout BY A,A,A ,SKIP;
  PUT bgred,white,text1 TO termout BY A,A,A ,SKIP;
  PUT  bggreen,text1 TO termout BY A,A, SKIP;
  PUT  bgyellow,text1 TO termout BY A,A, SKIP;
  PUT  bgblue,text1 TO termout BY A,A, SKIP;
  PUT  bgmagenta,text1 TO termout BY A,A, SKIP;
  PUT  bgcyan,text1 TO termout BY A,A, SKIP;
  PUT  bgwhite,black,text1 TO termout BY A,A, A,SKIP;
  PUT  bgblack,white,text1 TO termout BY A,A,A, SKIP;
END;

gotoTests: PROC;
  CALL pgoto(1,1);
  PUT goto,bgblack,goto TO termout BY A,A,A;
  CALL pgoto(2,2);
  PUT  goto,bgwhite,black,text1 TO termout BY A,A,A, A,SKIP;
  CALL pgoto(3,3);
  PUT  goto,bgwhite,black,text1 TO termout BY A,A,A, A,SKIP;
  CALL pgoto(4,4);
  PUT  goto,bgwhite,black,text1 TO termout BY A,A,A, A,SKIP;
  CALL pgoto(5,5);
  PUT  goto,bgwhite,black,text1 TO termout BY A,A,A, A,SKIP;
  CALL pgoto(13,1);
  PUT  goto,bgyellow,blue,text1 TO termout BY A,A,A, A,SKIP;
  CALL pgoto(13,28);
  PUT  goto,bgyellow,blue,text1 TO termout BY A,A,A, A,SKIP;
  CALL pgoto(1,29);
  PUT  goto,bgyellow,green,text1 TO termout BY A,A,A, A,SKIP;
  AFTER 1 SEC RESUME;
END;

fontTests: PROC;
  PUT big TO termout BY A;
  CALL pgoto(1,1);
  PUT goto, bgblack, goto TO termout BY A,A,A;
  PUT text1 TO termout BY A,SKIP;
  PUT text1 TO termout BY A,SKIP;
  CALL pgoto(2,2); PUT goto,text1 TO termout BY A,A;
  CALL pgoto(3,3); PUT goto,text1 TO termout BY A,A;

  AFTER 1 SEC RESUME;

  PUT small TO termout BY A;
  CALL pgoto(1,1);
  PUT goto, bgblack, goto TO termout BY A,A,A;
  PUT text1 TO termout BY A,SKIP;
  PUT text1 TO termout BY A,SKIP;
  CALL pgoto(2,2); PUT goto,text1 TO termout BY A,A;
  CALL pgoto(3,3); PUT goto,text1 TO termout BY A,A;

  AFTER 1 SEC RESUME;
END;

TASK1: TASK PRIO 10 MAIN;

  OPEN termout;
  CALL clearTests;
  CALL textColors;
  CALL gotoTests;
  CALL fontTests;

  CLOSE termout;

END;
MODEND;



